{"remainingRequest":"F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\node_modules\\babel-loader\\lib\\index.js!F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\src\\utils\\http.js","dependencies":[{"path":"F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\src\\utils\\http.js","mtime":1595211908795},{"path":"F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBzdG9yZSBmcm9tICcuLi9zdG9yZSc7IC8vIOW8leWFpWVsZW1lbnQtdWnkvp3otZYKCmltcG9ydCBFbGVtZW50IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgcm91dGVyIGZyb20gIi4uL3JvdXRlciI7IC8vIC8v5Yib5bu6YXhpb3Plrp7kvovvvIzlnKjov5nph4zlj6/ku6Xorr7nva7or7fmsYLnmoTpu5jorqTphY3nva4KLy8gY29uc3QgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewovLyAJYmFzZVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODQ0MycsIC8v5qC55o2u6Ieq5bex6YWN572u55qE5Y+N5ZCR5Luj55CG5Y676K6+572u5LiN5ZCM546v5aKD55qEYmFzZVVybAovLyAJdGltZW91dDogMTAwMDAsIC8vIOiuvue9rui2heaXtuaXtumXtDEwcwovLyB9KQovLyDoh6rlrprkuYnlhajlsYDor7fmsYLlpLQo5ZCO5Y+wKQoKYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCA9ICJodHRwOi8vbG9jYWxob3N0Ojg0NDMiOyAvLyDmlofmoaPkuK3nmoTnu5/kuIDorr7nva5wb3N06K+35rGC5aS044CCCgpheGlvcy5kZWZhdWx0cy5oZWFkZXJzLnBvc3RbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04JzsgLy/or7fmsYLmi6bmiKrlmagKCmF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgLy8gLy8g5q+P5qyh5Y+R6YCB6K+35rGC5LmL5YmN5Yik5pat5piv5ZCm5a2Y5ZyodG9rZW7vvIzlpoLmnpzlrZjlnKjvvIzliJnnu5/kuIDlnKhodHRw6K+35rGC55qEaGVhZGVy6YO95Yqg5LiKdG9rZW7vvIzkuI3nlKjmr4/mrKHor7fmsYLpg73miYvliqjmt7vliqDkuoYKICAvLyAvLyDljbPkvb/mnKzlnLDlrZjlnKh0b2tlbu+8jOS5n+acieWPr+iDvXRva2Vu5piv6L+H5pyf55qE77yM5omA5Lul5Zyo5ZON5bqU5oum5oiq5Zmo5Lit6KaB5a+56L+U5Zue54q25oCB6L+b6KGM5Yik5patCiAgLy8gY29uc3QgdG9rZW4gPSBzdG9yZS5zdGF0ZS50b2tlbjsKICAvLyB0b2tlbiAmJiAoY29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IHRva2VuKTsKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICByZXR1cm4gUHJvbWlzZS5lcnJvcihlcnJvcik7Cn0pOyAvL+WTjeW6lOaLpuaIquWZqAoKYXhpb3MuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICB2YXIgcmVzdWx0ID0gcmVzcG9uc2UuZGF0YTsKICBjb25zb2xlLmxvZygiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpOwogIGNvbnNvbGUubG9nKHJlc3VsdCk7CiAgY29uc29sZS5sb2coIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKTsKCiAgaWYgKHJlc3VsdCkgewogICAgcmVzdWx0Lm1lc3NhZ2UgPSByZXNwb25zZS5kYXRhLm1zZzsKICB9CgogIGlmIChyZXN1bHQuY29kZSA9PSAyMDApIHsKICAgIC8vRWxlbWVudC5NZXNzYWdlLnN1Y2Nlc3MoIueZu+W9leaIkOWKnywg5qyi6L+O5Zue5p2lICEiKQogICAgRWxlbWVudC5NZXNzYWdlLnN1Y2Nlc3MocmVzdWx0Lm1lc3NhZ2UpOwogICAgcmV0dXJuIHJlc3BvbnNlOyAvL+aUvuihjAogIH0gZWxzZSB7CiAgICAvL0VsZW1lbnQuTWVzc2FnZS5lcnJvcign5a+G56CB6ZSZ6K+vLCDor7flsJ3or5Xph43mlrDnmbvlvZUgIScpOwogICAgRWxlbWVudC5NZXNzYWdlLmVycm9yKHJlc3VsdC5tZXNzYWdlKTsKICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZXNwb25zZS5kYXRhLm1zZyk7IC8v5oqb5Ye65byC5bi4LCDpmLvmraLov5vlhaUiJGF4aW9zLnBvc3QoLi4iCiAgfQp9LCAvLyDmjZXojrflubblpITnkIblkI7lj7DlvILluLjkv6Hmga8KZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8g5L2/5b6X5byC5bi45L+h5oGv5pu05Yqg5Y+L5aW9CiAgaWYgKGVycm9yLnJlc3BvbnNlLmRhdGEpIHsKICAgIC8vZGF0YeS4jeS4uuepuuaXtgogICAgZXJyb3IubWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlLmRhdGEubXNnOwogICAgY29uc29sZS5sb2coIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKTsKICAgIGNvbnNvbGUubG9nKGVycm9yLm1lc3NhZ2UpOwogICAgY29uc29sZS5sb2coIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKTsKICB9CgogIGlmIChlcnJvci5yZXNwb25zZS5zdGF0dXMgPT09IDQwMSkgewogICAgLy9TaGlyb+iupOivgemUmeivrwogICAgc3RvcmUuY29tbWl0KCJSRU1PVkVfSU5GTyIpOyAvL+a4hemZpOeUqOaIt+S/oeaBrzp0b2tlbuWPinVzZXJJbmZvCgogICAgcm91dGVyLnB1c2goIi9sb2dpbiIpOyAvL+i3s+i9rOWIsOeZu+W9lemhtemdogogIH0KCiAgRWxlbWVudC5NZXNzYWdlLmVycm9yKGVycm9yLm1lc3NhZ2UpOwogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7IC8v5oqb5Ye65byC5bi4LCDpmLvmraLov5vlhaUiJGF4aW9zLnBvc3QoLi4iCn0pOw=="},{"version":3,"sources":["F:/Program/Java/Practice_Projects/SpringBoot_Practices/KrislinBlog/blog-vue/src/utils/http.js"],"names":["axios","store","Element","router","defaults","baseURL","headers","post","interceptors","request","use","config","error","Promise","response","result","data","console","log","message","msg","code","Message","success","reject","status","commit","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;;AACAH,KAAK,CAACI,QAAN,CAAeC,OAAf,GAAyB,uBAAzB,C,CAEA;;AACAL,KAAK,CAACI,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,iDAA9C,C,CAEA;;AACAP,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAAC,MAAM,EAAI;AACT;AACA;AACA;AACA;AACA,SAAOA,MAAP;AACA,CAPH,EAQE,UAAAC,KAAK,EAAI;AACR,SAAOC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAP;AACA,CAVH,E,CAaA;;AACAZ,KAAK,CAACQ,YAAN,CAAmBM,QAAnB,CAA4BJ,GAA5B,CAAgC,UAAAI,QAAQ,EAAI;AACzC,MAAIC,MAAM,GAAGD,QAAQ,CAACE,IAAtB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AAEA,MAAIH,MAAJ,EAAY;AACXA,IAAAA,MAAM,CAACI,OAAP,GAAiBL,QAAQ,CAACE,IAAT,CAAcI,GAA/B;AACA;;AACD,MAAIL,MAAM,CAACM,IAAP,IAAe,GAAnB,EAAwB;AACvB;AACAnB,IAAAA,OAAO,CAACoB,OAAR,CAAgBC,OAAhB,CAAwBR,MAAM,CAACI,OAA/B;AACA,WAAOL,QAAP,CAHuB,CAGP;AAChB,GAJD,MAIO;AACN;AACAZ,IAAAA,OAAO,CAACoB,OAAR,CAAgBV,KAAhB,CAAsBG,MAAM,CAACI,OAA7B;AACA,WAAON,OAAO,CAACW,MAAR,CAAeV,QAAQ,CAACE,IAAT,CAAcI,GAA7B,CAAP,CAHM,CAGkC;AACxC;AACD,CAnBH,EAqBE;AACA,UAAAR,KAAK,EAAI;AACR;AACA,MAAIA,KAAK,CAACE,QAAN,CAAeE,IAAnB,EAAyB;AAAE;AAC1BJ,IAAAA,KAAK,CAACO,OAAN,GAAgBP,KAAK,CAACE,QAAN,CAAeE,IAAf,CAAoBI,GAApC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,OAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA;;AAED,MAAIN,KAAK,CAACE,QAAN,CAAeW,MAAf,KAA0B,GAA9B,EAAmC;AAAE;AACpCxB,IAAAA,KAAK,CAACyB,MAAN,CAAa,aAAb,EADkC,CACN;;AAC5BvB,IAAAA,MAAM,CAACwB,IAAP,CAAY,QAAZ,EAFkC,CAEZ;AACtB;;AACDzB,EAAAA,OAAO,CAACoB,OAAR,CAAgBV,KAAhB,CAAsBA,KAAK,CAACO,OAA5B;AACA,SAAON,OAAO,CAACW,MAAR,CAAeZ,KAAf,CAAP,CAdQ,CAcoB;AAC5B,CArCH","sourcesContent":["import axios from 'axios'\r\nimport store from '../store'\r\n// 引入element-ui依赖\r\nimport Element from 'element-ui'\r\nimport router from \"../router\";\r\n\r\n// //创建axios实例，在这里可以设置请求的默认配置\r\n// const instance = axios.create({\r\n// \tbaseURL: 'http://localhost:8443', //根据自己配置的反向代理去设置不同环境的baseUrl\r\n// \ttimeout: 10000, // 设置超时时间10s\r\n// })\r\n\r\n// 自定义全局请求头(后台)\r\naxios.defaults.baseURL = \"http://localhost:8443\"\r\n\r\n// 文档中的统一设置post请求头。\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'\r\n\r\n//请求拦截器\r\naxios.interceptors.request.use(\r\n\t\tconfig => {\r\n\t\t\t// // 每次发送请求之前判断是否存在token，如果存在，则统一在http请求的header都加上token，不用每次请求都手动添加了\r\n\t\t\t// // 即使本地存在token，也有可能token是过期的，所以在响应拦截器中要对返回状态进行判断\r\n\t\t\t// const token = store.state.token;\r\n\t\t\t// token && (config.headers.Authorization = token);\r\n\t\t\treturn config;\r\n\t\t},\r\n\t\terror => {\r\n\t\t\treturn Promise.error(error);\r\n\t\t}\r\n)\r\n\r\n//响应拦截器\r\naxios.interceptors.response.use(response => {\r\n\t\t\tlet result = response.data\r\n\r\n\t\t\tconsole.log(\"-------------------------\")\r\n\t\t\tconsole.log(result)\r\n\t\t\tconsole.log(\"-------------------------\")\r\n\r\n\t\t\tif (result) {\r\n\t\t\t\tresult.message = response.data.msg\r\n\t\t\t}\r\n\t\t\tif (result.code == 200) {\r\n\t\t\t\t//Element.Message.success(\"登录成功, 欢迎回来 !\")\r\n\t\t\t\tElement.Message.success(result.message)\r\n\t\t\t\treturn response //放行\r\n\t\t\t} else {\r\n\t\t\t\t//Element.Message.error('密码错误, 请尝试重新登录 !');\r\n\t\t\t\tElement.Message.error(result.message)\r\n\t\t\t\treturn Promise.reject(response.data.msg)//抛出异常, 阻止进入\"$axios.post(..\"\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// 捕获并处理后台异常信息\r\n\t\terror => {\r\n\t\t\t// 使得异常信息更加友好\r\n\t\t\tif (error.response.data) { //data不为空时\r\n\t\t\t\terror.message = error.response.data.msg\r\n\t\t\t\tconsole.log(\"-------------------------\")\r\n\t\t\t\tconsole.log(error.message)\r\n\t\t\t\tconsole.log(\"-------------------------\")\r\n\t\t\t}\r\n\r\n\t\t\tif (error.response.status === 401) { //Shiro认证错误\r\n\t\t\t\tstore.commit(\"REMOVE_INFO\") //清除用户信息:token及userInfo\r\n\t\t\t\trouter.push(\"/login\") //跳转到登录页面\r\n\t\t\t}\r\n\t\t\tElement.Message.error(error.message);\r\n\t\t\treturn Promise.reject(error)//抛出异常, 阻止进入\"$axios.post(..\"\r\n\t\t}\r\n)\r\n"]}]}