{"remainingRequest":"F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\node_modules\\babel-loader\\lib\\index.js!F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\src\\utils\\permission.js","dependencies":[{"path":"F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\src\\utils\\permission.js","mtime":1594789972216},{"path":"F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Program\\Java\\Practice_Projects\\SpringBoot_Practices\\KrislinBlog\\blog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CgovKg0KICog6Lev55Sx5p2D6ZmQ5oum5oiqDQogKi8KaW1wb3J0IHJvdXRlciBmcm9tICIuLi9yb3V0ZXIiOyAvLyDot6/nlLHliKTmlq3nmbvlvZU65qC55o2u6Lev55Sx6YWN572u5paH5Lu255qE5Y+C5pWwCgpyb3V0ZXIuYmVmb3JlRWFjaChmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHsKICBpZiAodG8ubWF0Y2hlZC5zb21lKGZ1bmN0aW9uIChyZWNvcmQpIHsKICAgIHJldHVybiByZWNvcmQubWV0YS5yZXF1aXJlQXV0aDsKICB9KSkgewogICAgLy/liKTmlq3or6Xot6/nlLHmmK/lkKbpnIDopoHnmbvlvZXmnYPpmZAKICAgIHZhciB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpOwogICAgY29uc29sZS5sb2coInRva2VuLS0tLS0tOiIgKyB0b2tlbik7CgogICAgaWYgKHRva2VuKSB7CiAgICAgIC8vIOWIpOaWreW9k+WJjeeahHRva2Vu5piv5ZCm5a2Y5ZyoOyDnmbvlvZXlrZjlhaXnmoR0b2tlbgogICAgICBpZiAodG8ucGF0aCA9PT0gJy9sb2dpbicpIHsvLy4uCiAgICAgIH0gZWxzZSB7CiAgICAgICAgbmV4dCgpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBuZXh0KHsKICAgICAgICBwYXRoOiAnL2xvZ2luJwogICAgICB9KTsKICAgIH0KICB9IGVsc2UgewogICAgbmV4dCgpOwogIH0KfSk7"},{"version":3,"sources":["F:/Program/Java/Practice_Projects/SpringBoot_Practices/KrislinBlog/blog-vue/src/utils/permission.js"],"names":["router","beforeEach","to","from","next","matched","some","record","meta","requireAuth","token","localStorage","getItem","console","log","path"],"mappings":";;AAAA;;;AAGA,OAAOA,MAAP,MAAmB,WAAnB,C,CACA;;AACAA,MAAM,CAACC,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAClC,MAAIF,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,CAAYC,WAAhB;AAAA,GAAtB,CAAJ,EAAwD;AAAE;AACtD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBJ,KAA7B;;AACA,QAAIA,KAAJ,EAAW;AAAE;AACT,UAAIR,EAAE,CAACa,IAAH,KAAY,QAAhB,EAA0B,CACtB;AACH,OAFD,MAEO;AACHX,QAAAA,IAAI;AACP;AACJ,KAND,MAMO;AACHA,MAAAA,IAAI,CAAC;AACDW,QAAAA,IAAI,EAAE;AADL,OAAD,CAAJ;AAGH;AACJ,GAdD,MAcO;AACHX,IAAAA,IAAI;AACP;AACJ,CAlBD","sourcesContent":["/*\r\n * 路由权限拦截\r\n */\r\nimport router from \"../router\";\r\n// 路由判断登录:根据路由配置文件的参数\r\nrouter.beforeEach((to, from, next) => {\r\n    if (to.matched.some(record => record.meta.requireAuth)) { //判断该路由是否需要登录权限\r\n        const token = localStorage.getItem(\"token\")\r\n        console.log(\"token------:\" + token)\r\n        if (token) { // 判断当前的token是否存在; 登录存入的token\r\n            if (to.path === '/login') {\r\n                //..\r\n            } else {\r\n                next()\r\n            }\r\n        } else {\r\n            next({\r\n                path: '/login'\r\n            })\r\n        }\r\n    } else {\r\n        next()\r\n    }\r\n})\r\n"]}]}